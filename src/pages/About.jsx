import Navbar from "../components/Navbar";
import './about.css';
import { useContext } from "react";
import { loginContext } from "../context/loginContext";
import Footer from "../components/footer";

export default function About() {
   const {state} = useContext(loginContext);

    return(
        <>
        <Navbar/>
        <div className="container2">
                   <h1>To Do List React project</h1> 
                   <h3>{state.username} عزیز خیلی خوش اومدی</h3>
            <article>
                <p>
                <h5>معرفی پروژه :</h5>  Todo List با React
                <br />
این پروژه یک برنامه Todo List است که به کاربران این امکان را می‌دهد تا وظایف روزمره خود را مدیریت کنند. با استفاده از React و Hooks، این برنامه به کاربران اجازه می‌دهد تا وظایف جدید اضافه کنند، وظایف موجود را ویرایش و حذف کنند و همچنین وضعیت انجام وظایف را مشاهده کنند. 
                </p>
            </article>
            <article>
                <p>
                <h5> ویژگی‌های کلیدی:</h5> 
                

• اضافه کردن وظایف: کاربران می‌توانند وظایف جدید را با وارد کردن متن و کلیک بر روی دکمه "اضافه کردن" به لیست خود اضافه کنند.
<br />
• ویرایش و حذف وظایف: هر وظیفه در لیست قابلیت ویرایش و حذف دارد.
<br />
• مدیریت وضعیت: کاربران می‌توانند وضعیت انجام وظایف را تغییر دهند و وظایف کامل شده را فیلتر کنند.
<br />
• استفاده از Context API: برای مدیریت وضعیت کاربر و احراز هویت، از Context API استفاده شده است.
                </p>
            </article>
            <article>
                <p>
                    <h5>توانایی‌های من در توسعه این پروژه:</h5>
                    در این پروژه، من توانستم مهارت‌های زیر را به نمایش بگذارم:
<br />
1. تسلط بر React: با استفاده از کامپوننت‌ها، Hooks (مانند useState و useContext) و ساختارهای کد تمیز، توانستم یک رابط کاربری کاربرپسند ایجاد کنم.
<br />
2. مدیریت وضعیت با Context API: با استفاده از Context API، توانستم وضعیت کاربر و اطلاعات مربوط به ورود و خروج را مدیریت کنم که این امر به بهبود تجربه کاربری کمک کرد.
<br />
3. طراحی رابط کاربری: با طراحی یک نوار ناوبری ساده و کاربرپسند، تجربه کاربری بهتری برای کاربران فراهم کردم.
<br />
4. استفاده از UUID: برای شناسایی منحصر به فرد هر وظیفه، از کتابخانه uuid استفاده کردم که به من کمک کرد تا مدیریت وظایف را آسان‌تر کنم.
<br />
5. استفاده از CSS: با طراحی CSS مناسب، توانستم ظاهری زیبا و متناسب برای برنامه ایجاد کنم.

                </p>
            </article>
            <article>
                <p>
                    <h5>نتیجه‌گیری :</h5>
                    این پروژه نه تنها مهارت‌های فنی من در توسعه وب با React را نشان می‌دهد، بلکه توانایی من در حل مسائل و ارائه راه‌حل‌های کاربرپسند را نیز به نمایش می‌گذارد. امیدوارم که این پروژه بتواند به عنوان یک نمونه کار قوی در رزومه من عمل کند و نشان‌دهنده توانایی‌های من در زمینه توسعه نرم‌افزار باشد.
                    <br />
                    البته ناگفته نماند که این پروژه فقط برای نمایش تسلط و مهارت های اولیه اجرا شده است و خیلی جای کار دارد که به همین حد بسنده می کنیم .
                </p>
            </article>
        </div>
        <Footer/>
        </>
        
    )
};
